---
import BaseLayout from "../../layouts/BaseLayout.astro";
import CommentSection from "../../components/CommentSection.svelte";
import { XataClient } from "../../xata";
import { createClient } from "@supabase/supabase-js";
import { marked } from "marked";

const xata = new XataClient({
  apiKey: import.meta.env.XATA_API_KEY,
  branch: import.meta.env.XATA_BRANCH,
});

const supabase = createClient (import.meta.env.NEXT_PUBLIC_SUPABASE_URL, import.meta.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);
let { data: blogPosts, error } = await supabase
    .from('blogPosts')
    .select('*')

export async function getStaticPaths() {
  const supabase = createClient (import.meta.env.NEXT_PUBLIC_SUPABASE_URL, import.meta.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);
  let { data: posts, error } = await supabase
    .from('blogPosts')
    .select('*')

  const routes = posts.map(
    ({
      id,
      slug,
      title,
      description,
      content,
      tags,
      publishDate,
      postImage,
      altText,
    }) => {
      return {
        params: { slug },
        props: {
          slug,
          id,
          title,
          description,
          content,
          publishDate,
          tags,
          postImage,
          altText,
        },
      };
    }
  );

  return routes;
}

const post = Astro.props;

const postComments = await xata.db.comments
  .filter({ "blogPost.slug": post.slug })
  .getMany();

const markdown = marked.parse(post.content);
---

<BaseLayout>
  <div class="section cc-home-header">
    <div class="custom-container">
      <div class="row row-justify-center">
        <div class="col col-lg-8 col-md-12">
          <div class="date-text cc-blogpage">
            {post?.publishDate}
          </div>
          <h1 class="blog-heading" transition:name={`${post?.slug}-title`}>
            {post?.title}
          </h1>
          <div
            class="card px-6 py-8 md:px-8"
            transition:name={`${post?.slug}-card`}
          >
            <div class="blog-header relative">
              <div class="blog-tags">
                <!--{
                  post?.tags.map((tag: any) => (
                    <a href="#" class="tag-link">
                      #{tag}
                    </a>
                  ))
                }-->
              </div>
              <a href="#" class="btn cc-light cc-smaller w-button flex gap-4">
                Share on
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="22" fill="none" viewBox="0 0 24 22">
                  <path fill="#333" d="M18.901 0h3.68l-8.04 9.19L24 21.693h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 0h7.594l5.243 6.932L18.901 0ZM17.61 19.491h2.039L6.486 2.087H4.298L17.61 19.491Z"/>
                </svg>
              </a>
            </div>
            {
              post.postImage && (
                <div class="image-wrapper cc-story">
                  <img
                    style="max-height: 20rem;"
                    src=`https://qixapdjpuoidwayatqcl.supabase.co/storage/v1/object/public/post-images/maptionnaire.webp`
                    loading="eager"
                    alt={post?.altText}
                    class="full-image"
                  />
                </div>
              )
            }

            <div>
              <article
                set:html={markdown}
                class="max-w-none prose prose-li:text-gray-800 prose-li:marker:text-purple-800 prose-blockquote:text-gray-800 prose-blockquote:border-purple-500"
              />
            </div>
          </div>
          <section id="comments">
            <CommentSection
              postComments={postComments}
              post={post}
              client:load
            />
          </section>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>
